'use client'

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { ProfessionalRoleSelector } from '@/components/ui/professional-selector'
import { ProfessionalRole } from '@/types'
import Link from 'next/link'

export default function SignUpPage() {
  const [email, setEmail] = useState('')
  const [fullName, setFullName] = useState('')
  const [phone, setPhone] = useState('')
  const [city, setCity] = useState('')
  const [professionalRole, setProfessionalRole] = useState<ProfessionalRole>()
  const [currentStep, setCurrentStep] = useState<'signup' | 'otp' | 'success'>('signup')
  const [otp, setOtp] = useState('')
  const [isLoading, setIsLoading] = useState(false)

  const handleSignUpSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!professionalRole) {
      alert('Please select your professional category')
      return
    }
    
    setIsLoading(true)
    
    // Simulate OTP sending
    setTimeout(() => {
      setCurrentStep('otp')
      setIsLoading(false)
    }, 1000)
  }

  const handleOTPVerify = async (e: React.FormEvent) => {
    e.preventDefault()
    
    if (otp.length !== 6) {
      alert('Please enter a valid 6-digit OTP')
      return
    }
    
    setIsLoading(true)
    
    // Simulate OTP verification
    setTimeout(() => {
      setCurrentStep('success')
      setIsLoading(false)
      // Redirect to dashboard after 2 seconds
      setTimeout(() => {
        window.location.href = '/dashboard'
      }, 2000)
    }, 1000)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-black text-white flex items-center justify-center py-8">
      <div className="max-w-2xl w-full mx-4">
        {/* Logo */}
        <div className="text-center mb-8">
          <Link href="/" className="inline-flex items-center space-x-3">
            <div className="w-10 h-10 bg-gradient-to-r from-white to-gray-300 rounded-full shadow-lg"></div>
            <span className="text-3xl font-bold bg-gradient-to-r from-white via-gray-200 to-gray-400 bg-clip-text text-transparent">
              Clubicles
            </span>
          </Link>
        </div>

        {currentStep === 'signup' && (
          <Card className="bg-gray-900/80 backdrop-blur-sm border-gray-700 shadow-2xl">
            <CardHeader className="text-center pb-8">
              <CardTitle className="text-3xl font-bold bg-gradient-to-r from-white via-gray-200 to-gray-400 bg-clip-text text-transparent mb-2">
                Create Your Account
              </CardTitle>
              <p className="text-gray-400">Join thousands of professionals finding their perfect workspace</p>
            </CardHeader>
            <CardContent className="px-8 pb-8">
              <form onSubmit={handleSignUpSubmit} className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <Label htmlFor="fullName" className="text-gray-300 font-medium">Full Name</Label>
                    <Input
                      id="fullName"
                      type="text"
                      placeholder="Enter your full name"
                      value={fullName}
                      onChange={(e) => setFullName(e.target.value)}
                      className="mt-2 bg-gray-800/50 border-gray-600 text-white placeholder-gray-400 focus:border-white focus:ring-1 focus:ring-white transition-colors"
                      required
                    />
                  </div>
                  <div>
                    <Label htmlFor="email" className="text-gray-300 font-medium">Email Address</Label>
                    <Input
                      id="email"
                      type="email"
                      placeholder="Enter your email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="mt-2 bg-gray-800/50 border-gray-600 text-white placeholder-gray-400 focus:border-white focus:ring-1 focus:ring-white transition-colors"
                      required
                    />
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <Label htmlFor="phone" className="text-gray-300 font-medium">Phone Number</Label>
                    <Input
                      id="phone"
                      type="tel"
                      placeholder="Enter your phone number"
                      value={phone}
                      onChange={(e) => setPhone(e.target.value)}
                      className="mt-2 bg-gray-800/50 border-gray-600 text-white placeholder-gray-400 focus:border-white focus:ring-1 focus:ring-white transition-colors"
                      required
                    />
                  </div>
                  <div>
                    <Label htmlFor="city" className="text-gray-300 font-medium">City</Label>
                    <Input
                      id="city"
                      type="text"
                      placeholder="Enter your city"
                      value={city}
                      onChange={(e) => setCity(e.target.value)}
                      className="mt-2 bg-gray-800/50 border-gray-600 text-white placeholder-gray-400 focus:border-white focus:ring-1 focus:ring-white transition-colors"
                      required
                    />
                  </div>
                </div>

                <div>
                  <ProfessionalRoleSelector
                    selectedRole={professionalRole}
                    onRoleSelect={setProfessionalRole}
                  />
                </div>

                <Button 
                  type="submit" 
                  className="w-full bg-gradient-to-r from-white to-gray-200 !text-black font-semibold hover:from-gray-200 hover:to-gray-300 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-[1.02] h-12 mt-8"
                  disabled={isLoading}
                >
                  {isLoading ? (
                    <div className="flex items-center !text-black">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-black mr-2"></div>
                      Creating Account...
                    </div>
                  ) : (
                    'Create Account'
                  )}
                </Button>

                <div className="text-center pt-6 border-t border-gray-700">
                  <p className="text-gray-400">
                    Already have an account?{' '}
                    <Link href="/signin" className="text-white hover:text-gray-300 font-medium transition-colors underline underline-offset-2">
                      Sign in here
                    </Link>
                  </p>
                </div>
              </form>
            </CardContent>
          </Card>
        )}

        {currentStep === 'otp' && (
          <Card className="bg-gray-900/80 backdrop-blur-sm border-gray-700 shadow-2xl max-w-md mx-auto">
            <CardHeader className="text-center">
              <CardTitle className="text-2xl font-bold text-white mb-2">Verify Your Email</CardTitle>
              <p className="text-gray-400">
                We've sent a 6-digit code to<br />
                <strong className="text-white">{email}</strong>
              </p>
            </CardHeader>
            <CardContent className="px-8 pb-8">
              <form onSubmit={handleOTPVerify} className="space-y-6">
                <div>
                  <Label htmlFor="otp" className="text-gray-300 font-medium">Enter OTP</Label>
                  <Input
                    id="otp"
                    type="text"
                    placeholder="000000"
                    value={otp}
                    onChange={(e) => setOtp(e.target.value.replace(/\D/g, '').slice(0, 6))}
                    className="text-center text-lg tracking-widest bg-gray-800/50 border-gray-600 text-white mt-2 focus:border-white focus:ring-1 focus:ring-white transition-colors"
                    maxLength={6}
                    required
                  />
                </div>

                <Button 
                  type="submit" 
                  className="w-full bg-gradient-to-r from-white to-gray-200 !text-black font-semibold hover:from-gray-200 hover:to-gray-300 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-[1.02] h-12"
                  disabled={isLoading || otp.length !== 6}
                >
                  {isLoading ? (
                    <div className="flex items-center !text-black">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-black mr-2"></div>
                      Verifying...
                    </div>
                  ) : (
                    'Verify OTP'
                  )}
                </Button>

                <div className="text-center">
                  <button
                    type="button"
                    onClick={() => setCurrentStep('signup')}
                    className="text-gray-400 hover:text-white transition-colors"
                  >
                    ‚Üê Back to sign up
                  </button>
                </div>
              </form>
            </CardContent>
          </Card>
        )}

        {currentStep === 'success' && (
          <Card className="bg-gray-900/80 backdrop-blur-sm border-gray-700 shadow-2xl max-w-md mx-auto">
            <CardContent className="pt-12 pb-8 text-center">
              <div className="text-6xl mb-6">üéâ</div>
              <h2 className="text-3xl font-bold mb-4 text-white">Welcome to Clubicles!</h2>
              <p className="text-gray-400 mb-6">
                Your account has been created successfully. Redirecting to your dashboard...
              </p>
              
              <div className="animate-pulse flex justify-center">
                <div className="w-8 h-8 bg-white rounded-full"></div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  )
}
