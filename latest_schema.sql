-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admins (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_id uuid NOT NULL UNIQUE,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT admins_pkey PRIMARY KEY (id),
  CONSTRAINT admins_auth_id_fkey FOREIGN KEY (auth_id) REFERENCES auth.users(id)
);
CREATE TABLE public.booking_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  booking_id uuid NOT NULL,
  razorpay_payment_id character varying,
  razorpay_order_id character varying,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency character DEFAULT 'INR'::bpchar CHECK (currency ~ '^[A-Z]{3}$'::text),
  status USER-DEFINED DEFAULT 'pending'::payment_status,
  gateway_response jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT booking_payments_pkey PRIMARY KEY (id),
  CONSTRAINT booking_payments_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id)
);
CREATE TABLE public.booking_taxes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  booking_id uuid NOT NULL,
  tax_id uuid NOT NULL,
  tax_amount numeric NOT NULL CHECK (tax_amount >= 0::numeric),
  base_amount numeric NOT NULL CHECK (base_amount > 0::numeric),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT booking_taxes_pkey PRIMARY KEY (id),
  CONSTRAINT booking_taxes_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id),
  CONSTRAINT booking_taxes_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES public.tax_configurations(id)
);
CREATE TABLE public.bookings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  space_id uuid NOT NULL,
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  date date NOT NULL CHECK (date >= '2024-01-01'::date AND date <= (CURRENT_DATE + '1 year'::interval)),
  seats_booked integer NOT NULL CHECK (seats_booked > 0),
  base_amount numeric NOT NULL CHECK (base_amount > 0::numeric),
  tax_amount numeric DEFAULT 0 CHECK (tax_amount >= 0::numeric),
  total_amount numeric NOT NULL CHECK (total_amount > 0::numeric),
  owner_payout numeric NOT NULL CHECK (owner_payout >= 0::numeric),
  platform_commission numeric DEFAULT 0 CHECK (platform_commission >= 0::numeric),
  status USER-DEFINED DEFAULT 'pending'::booking_status,
  payment_id character varying,
  booking_reference character varying DEFAULT ((((('BK'::text || EXTRACT(year FROM now())) || '-'::text) || lpad((EXTRACT(doy FROM now()))::text, 3, '0'::text)) || '-'::text) || lpad((floor((random() * (10000)::double precision)))::text, 4, '0'::text)) UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  roles ARRAY,
  redemption_code character varying DEFAULT ((((('RC'::text || EXTRACT(year FROM now())) || '-'::text) || lpad((EXTRACT(doy FROM now()))::text, 3, '0'::text)) || '-'::text) || lpad((floor((random() * (10000)::double precision)))::text, 4, '0'::text)) UNIQUE,
  qr_code_data text,
  is_redeemed boolean NOT NULL DEFAULT false,
  redeemed_at timestamp with time zone,
  redeemed_by uuid,
  CONSTRAINT bookings_pkey PRIMARY KEY (id),
  CONSTRAINT bookings_redeemed_by_fkey FOREIGN KEY (redeemed_by) REFERENCES public.space_owners(id),
  CONSTRAINT bookings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT bookings_space_id_fkey FOREIGN KEY (space_id) REFERENCES public.spaces(id)
);
CREATE TABLE public.business_balances (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid NOT NULL UNIQUE,
  current_balance numeric NOT NULL DEFAULT 0.00,
  total_earned numeric NOT NULL DEFAULT 0.00,
  total_withdrawn numeric NOT NULL DEFAULT 0.00,
  pending_amount numeric NOT NULL DEFAULT 0.00,
  commission_deducted numeric NOT NULL DEFAULT 0.00,
  tax_deducted numeric NOT NULL DEFAULT 0.00,
  last_payout_date timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_balances_pkey PRIMARY KEY (id),
  CONSTRAINT business_balances_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.space_owner_business_info(id)
);
CREATE TABLE public.payment_fallback (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  booking_id uuid,
  razorpay_payment_id character varying,
  razorpay_order_id character varying,
  webhook_event_id character varying,
  event_type character varying,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency character DEFAULT 'INR'::bpchar CHECK (currency ~ '^[A-Z]{3}$'::text),
  payment_status character varying,
  gateway_response jsonb,
  error_code character varying,
  error_description text,
  failure_reason text,
  retry_count integer DEFAULT 0 CHECK (retry_count >= 0),
  is_resolved boolean DEFAULT false,
  resolved_at timestamp with time zone,
  resolved_by uuid,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT payment_fallback_pkey PRIMARY KEY (id),
  CONSTRAINT payment_fallback_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id),
  CONSTRAINT payment_fallback_resolved_by_fkey FOREIGN KEY (resolved_by) REFERENCES public.admins(id)
);
CREATE TABLE public.profiles (
  user_id uuid NOT NULL,
  display_name text,
  avatar_url text,
  city text,
  bio text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (user_id),
  CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.resources (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  space_id uuid NOT NULL,
  owner_id uuid NOT NULL,
  data text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT resources_pkey PRIMARY KEY (id),
  CONSTRAINT resources_space_id_fkey FOREIGN KEY (space_id) REFERENCES public.spaces(id),
  CONSTRAINT resources_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  space_id uuid NOT NULL,
  booking_id uuid NOT NULL UNIQUE,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT reviews_space_id_fkey FOREIGN KEY (space_id) REFERENCES public.spaces(id),
  CONSTRAINT reviews_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id)
);
CREATE TABLE public.space_members (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  space_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text NOT NULL DEFAULT 'member'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT space_members_pkey PRIMARY KEY (id),
  CONSTRAINT space_members_space_id_fkey FOREIGN KEY (space_id) REFERENCES public.spaces(id),
  CONSTRAINT space_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.space_owner_business_info (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  space_owner_id uuid NOT NULL UNIQUE,
  business_name character varying NOT NULL,
  business_type character varying NOT NULL,
  gst_number character varying CHECK (gst_number IS NULL OR gst_number::text ~ '^\d{2}[A-Z]{5}\d{4}[A-Z]{1}[A-Z\d]{1}[Z]{1}[A-Z\d]{1}$'::text),
  pan_number character varying NOT NULL CHECK (pan_number::text ~ '^[A-Z]{5}\d{4}[A-Z]{1}$'::text),
  business_address text NOT NULL,
  business_city character varying NOT NULL,
  business_state character varying NOT NULL,
  business_pincode character varying NOT NULL CHECK (business_pincode::text ~ '^\d{6}$'::text),
  verification_status USER-DEFINED DEFAULT 'pending'::verification_status,
  verified_by uuid,
  verified_at timestamp with time zone,
  rejection_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT space_owner_business_info_pkey PRIMARY KEY (id),
  CONSTRAINT space_owner_business_info_space_owner_id_fkey FOREIGN KEY (space_owner_id) REFERENCES public.space_owners(id),
  CONSTRAINT space_owner_business_info_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.admins(id)
);
CREATE TABLE public.space_owner_payment_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  space_owner_id uuid NOT NULL,
  subscription_id uuid,
  amount numeric NOT NULL,
  currency character varying DEFAULT 'INR'::character varying,
  payment_method character varying NOT NULL DEFAULT 'razorpay'::character varying,
  transaction_id character varying NOT NULL UNIQUE,
  razorpay_order_id character varying,
  razorpay_signature character varying,
  status character varying NOT NULL DEFAULT 'completed'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  payment_date timestamp with time zone NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT space_owner_payment_history_pkey PRIMARY KEY (id),
  CONSTRAINT space_owner_payment_history_space_owner_id_fkey FOREIGN KEY (space_owner_id) REFERENCES public.space_owners(id),
  CONSTRAINT space_owner_payment_history_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.space_owner_subscriptions(id)
);
CREATE TABLE public.space_owner_payment_info (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  space_owner_id uuid NOT NULL UNIQUE,
  bank_account_number character varying NOT NULL,
  bank_ifsc_code character varying NOT NULL CHECK (bank_ifsc_code::text ~ '^[A-Z]{4}\d{7}$'::text),
  bank_account_holder_name character varying NOT NULL,
  bank_name character varying NOT NULL,
  upi_id character varying CHECK (upi_id IS NULL OR upi_id::text ~ '^[\w.-]+@[\w.-]+$'::text),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT space_owner_payment_info_pkey PRIMARY KEY (id),
  CONSTRAINT space_owner_payment_info_space_owner_id_fkey FOREIGN KEY (space_owner_id) REFERENCES public.space_owners(id)
);
CREATE TABLE public.space_owner_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  payout_status USER-DEFINED DEFAULT 'pending'::payout_status,
  transaction_reference character varying,
  payment_method character varying DEFAULT 'bank_transfer'::character varying CHECK (payment_method::text = ANY (ARRAY['bank_transfer'::character varying, 'upi'::character varying, 'cheque'::character varying]::text[])),
  processed_by uuid,
  processed_at timestamp with time zone,
  failure_reason text,
  booking_ids ARRAY,
  commission_deducted numeric DEFAULT 0 CHECK (commission_deducted >= 0::numeric),
  tax_deducted numeric DEFAULT 0 CHECK (tax_deducted >= 0::numeric),
  net_amount numeric NOT NULL CHECK (net_amount > 0::numeric),
  payout_date date DEFAULT CURRENT_DATE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT space_owner_payments_pkey PRIMARY KEY (id),
  CONSTRAINT space_owner_payments_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.space_owner_business_info(id),
  CONSTRAINT space_owner_payments_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES public.admins(id)
);
CREATE TABLE public.space_owner_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  space_owner_id uuid NOT NULL UNIQUE,
  plan_name character varying NOT NULL CHECK (plan_name::text = ANY (ARRAY['Basic'::character varying, 'Premium'::character varying]::text[])),
  billing_cycle character varying NOT NULL CHECK (billing_cycle::text = ANY (ARRAY['monthly'::character varying, 'yearly'::character varying]::text[])),
  status character varying NOT NULL DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'cancelled'::character varying, 'expired'::character varying, 'suspended'::character varying]::text[])),
  start_date timestamp with time zone NOT NULL,
  expiry_date timestamp with time zone NOT NULL,
  auto_renew boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT space_owner_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT space_owner_subscriptions_space_owner_id_fkey FOREIGN KEY (space_owner_id) REFERENCES public.space_owners(id)
);
CREATE TABLE public.space_owners (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_id uuid NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE CHECK (email::text ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name character varying,
  last_name character varying,
  phone character varying CHECK (phone IS NULL OR phone::text ~ '^\+?[1-9]\d{1,14}$'::text),
  premium_plan USER-DEFINED DEFAULT 'basic'::premium_plan,
  is_active boolean NOT NULL DEFAULT true,
  onboarding_completed boolean NOT NULL DEFAULT false,
  commission_rate numeric DEFAULT 10.00 CHECK (commission_rate >= 0::numeric AND commission_rate <= 100::numeric),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  approval_status text NOT NULL DEFAULT 'pending'::text CHECK (approval_status = ANY (ARRAY['approved'::text, 'pending'::text, 'rejected'::text])),
  plan_expiry_date timestamp with time zone,
  CONSTRAINT space_owners_pkey PRIMARY KEY (id),
  CONSTRAINT space_owners_auth_id_fkey FOREIGN KEY (auth_id) REFERENCES auth.users(id)
);
CREATE TABLE public.spaces (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid NOT NULL DEFAULT current_business_id(),
  name character varying NOT NULL,
  description text NOT NULL,
  address text NOT NULL,
  city character varying NOT NULL,
  pincode character varying NOT NULL CHECK (pincode::text ~ '^\d{6}$'::text),
  latitude numeric,
  longitude numeric,
  location USER-DEFINED DEFAULT 
CASE
    WHEN ((latitude IS NOT NULL) AND (longitude IS NOT NULL)) THEN st_setsrid(st_makepoint((longitude)::double precision, (latitude)::double precision), 4326)
    ELSE NULL::geometry
END,
  total_seats integer NOT NULL,
  available_seats integer NOT NULL DEFAULT 0,
  price_per_hour numeric NOT NULL,
  price_per_day numeric NOT NULL,
  amenities ARRAY DEFAULT '{}'::text[],
  images ARRAY DEFAULT '{}'::text[],
  rating numeric DEFAULT 0.0 CHECK (rating >= 0::numeric AND rating <= 5::numeric),
  total_bookings integer DEFAULT 0,
  revenue numeric DEFAULT 0.0,
  operating_hours jsonb DEFAULT '{"days": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday"], "open": "09:00", "close": "18:00"}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  violet integer DEFAULT 0,
  indigo integer DEFAULT 0,
  blue integer DEFAULT 0,
  green integer DEFAULT 0,
  yellow integer DEFAULT 0,
  orange integer DEFAULT 0,
  red integer DEFAULT 0,
  grey integer DEFAULT 0,
  white integer DEFAULT 0,
  black integer DEFAULT 0,
  CONSTRAINT spaces_pkey PRIMARY KEY (id),
  CONSTRAINT spaces_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.space_owner_business_info(id)
);
CREATE TABLE public.support_ticket_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_id uuid NOT NULL,
  sender_type character varying NOT NULL CHECK (sender_type::text = ANY (ARRAY['user'::character varying, 'admin'::character varying]::text[])),
  sender_id uuid NOT NULL,
  message text NOT NULL,
  attachments jsonb,
  is_internal boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT support_ticket_messages_pkey PRIMARY KEY (id),
  CONSTRAINT support_messages_ticket_fk FOREIGN KEY (ticket_id) REFERENCES public.support_tickets(id)
);
CREATE TABLE public.support_tickets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  ticket_number character varying NOT NULL UNIQUE,
  user_id uuid NOT NULL,
  subject character varying NOT NULL,
  description text NOT NULL,
  category USER-DEFINED NOT NULL DEFAULT 'general'::support_category,
  priority USER-DEFINED NOT NULL DEFAULT 'medium'::support_priority,
  status USER-DEFINED NOT NULL DEFAULT 'open'::support_status,
  assigned_admin_id uuid,
  admin_response text,
  internal_notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  closed_at timestamp with time zone,
  user_agent text,
  ip_address inet,
  attachments jsonb,
  tags ARRAY,
  CONSTRAINT support_tickets_pkey PRIMARY KEY (id),
  CONSTRAINT support_tickets_user_fk FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT support_tickets_admin_fk FOREIGN KEY (assigned_admin_id) REFERENCES public.admins(id)
);
CREATE TABLE public.tax_configurations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  percentage numeric NOT NULL CHECK (percentage >= 0::numeric AND percentage <= 100::numeric),
  is_enabled boolean DEFAULT true,
  applies_to character varying NOT NULL CHECK (applies_to::text = ANY (ARRAY['booking'::character varying, 'owner_payout'::character varying, 'both'::character varying]::text[])),
  description text,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT tax_configurations_pkey PRIMARY KEY (id),
  CONSTRAINT tax_configurations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.admins(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_id uuid NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE CHECK (email::text ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name character varying,
  last_name character varying,
  phone character varying CHECK (phone IS NULL OR phone::text ~ '^\+?[1-9]\d{1,14}$'::text),
  city character varying,
  professional_role USER-DEFINED,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  user_role USER-DEFINED,
  roles USER-DEFINED,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_auth_id_fkey FOREIGN KEY (auth_id) REFERENCES auth.users(id)
);